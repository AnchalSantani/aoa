#include <stdio.h>
#include <stdlib.h>

void sort(int arr[], int n) {
    for (int i = 0; i < n-1; i++)
        for (int j = 0; j < n-i-1; j++)
            if (arr[j] > arr[j+1]) {
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
}

void CSCAN(int requests[], int n, int head, int disk_size) {
    int totalSeek = 0;
    int i;

    sort(requests, n);

    int index = 0;
    for (i = 0; i < n; i++) {
        if (requests[i] >= head) {
            index = i;
            break;
        }
    }

    printf("\nC-SCAN Order:\n");

    // Move right from head to end
    for (i = index; i < n; i++) {
        printf("%d ", requests[i]);
        totalSeek += abs(head - requests[i]);
        head = requests[i];
    }

    // Jump to start (simulate circular move)
    if (head != disk_size - 1) {
        totalSeek += (disk_size - 1 - head);
        head = 0;
        totalSeek += head;
        printf("%d ", disk_size - 1); // End of disk
        printf("0 ");
    } else {
        head = 0;
        totalSeek += head;
        printf("0 ");
    }

    // Move from start to just before the first request
    for (i = 0; i < index; i++) {
        printf("%d ", requests[i]);
        totalSeek += abs(head - requests[i]);
        head = requests[i];
    }

    printf("\nTotal Head Movement in C-SCAN: %d\n", totalSeek);
}

int main() {
    int n, head, disk_size;

    printf("Enter number of requests: ");
    scanf("%d", &n);

    int requests[n];
    printf("Enter request queue: ");
    for (int i = 0; i < n; i++)
        scanf("%d", &requests[i]);

    printf("Enter initial head position: ");
    scanf("%d", &head);

    printf("Enter total disk size (e.g., 200): ");
    scanf("%d", &disk_size);

    CSCAN(requests, n, head, disk_size);

    return 0;
}
