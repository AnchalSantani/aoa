#include <stdio.h>

void sjf() {
    int n, bt[20], p[20], wt[20], tat[20], temp;
    float avg_wt = 0, avg_tat = 0;

    printf("\n[2] SJF Scheduling (Arrival Time = 0 for all)\n");
    printf("Enter number of processes: ");
    scanf("%d", &n);

    // Input burst times
    for(int i = 0; i < n; i++) {
        printf("Burst time of P%d: ", i + 1);
        scanf("%d", &bt[i]);
        p[i] = i + 1; // Assigning process numbers
    }

    // Sort burst times and corresponding process numbers using bubble sort
    for(int i = 0; i < n - 1; i++) {
        for(int j = 0; j < n - i - 1; j++) {
            if(bt[j] > bt[j + 1]) {
                // Swap burst times
                temp = bt[j];
                bt[j] = bt[j + 1];
                bt[j + 1] = temp;

                // Swap process numbers
                temp = p[j];
                p[j] = p[j + 1];
                p[j + 1] = temp;
            }
        }
    }

    // First process has 0 waiting time
    wt[0] = 0;

    // Calculate waiting times
    for(int i = 1; i < n; i++) {
        wt[i] = wt[i - 1] + bt[i - 1];
    }

    // Calculate turnaround times and total averages
    for(int i = 0; i < n; i++) {
        tat[i] = wt[i] + bt[i];
        avg_wt += wt[i];
        avg_tat += tat[i];
    }

    // Output
    printf("\nProcess\tBT\tWT\tTAT\n");
    for(int i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\n", p[i], bt[i], wt[i], tat[i]);
    }

    printf("Average WT: %.2f\n", avg_wt / n);
    printf("Average TAT: %.2f\n", avg_tat / n);
}

int main() {
    sjf();
    return 0;
}



