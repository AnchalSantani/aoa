#include <stdio.h>

#define MAX_FRAMES 10
#define MAX_PAGES 100

int main() {
    int frames, pages, page[MAX_PAGES], frame[MAX_FRAMES];
    int page_faults = 0, page_hits = 0;
    int pos = 0; // FIFO uses a pointer to the oldest frame
    int flag;

    printf("Enter number of frames: ");
    scanf("%d", &frames);

    printf("Enter number of pages: ");
    scanf("%d", &pages);

    printf("Enter reference string (page numbers):\n");
    for (int i = 0; i < pages; ++i) {
        scanf("%d", &page[i]);
    }

    for (int i = 0; i < frames; ++i) {
        frame[i] = -1;
    }

    printf("\n| Reference |");
    for (int i = 0; i < frames; i++) printf(" Frame %d |", i + 1);
    printf(" Page Faults | Page Hits |");

    printf("\n|-----------|");
    for (int i = 0; i < frames; i++) printf("---------|");
    printf("-------------|-----------|");

    for (int i = 0; i < pages; ++i) {
        flag = 0;

        // Check if page is already in frame (hit)
        for (int j = 0; j < frames; ++j) {
            if (frame[j] == page[i]) {
                page_hits++;
                flag = 1;
                break;
            }
        }

        // If not a hit, replace using FIFO
        if (!flag) {
            frame[pos] = page[i];
            pos = (pos + 1) % frames; // Move to next frame in circular fashion
            page_faults++;
        }

        // Print current status
        printf("\n| %9d |", page[i]);
        for (int j = 0; j < frames; ++j)
            printf(" %7d |", (frame[j] == -1) ? -1 : frame[j]);
        printf(" %11d | %9d |", page_faults, page_hits);
    }

    float page_fault_ratio = (float) page_faults / pages;
    float page_hit_ratio = (float) page_hits / pages;

    printf("\n\nTotal Page Faults: %d", page_faults);
    printf("\nTotal Page Hits  : %d", page_hits);
    printf("\nPage Fault Ratio : %.2f", page_fault_ratio);
    printf("\nPage Hit Ratio   : %.2f\n", page_hit_ratio);

    return 0;
}
