#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

int absDiff(int a, int b) {
    return abs(a - b);
}

int findClosest(int requests[], bool visited[], int n, int head) {
    int minDist = __INT_MAX__, index = -1;

    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            int dist = absDiff(head, requests[i]);
            if (dist < minDist) {
                minDist = dist;
                index = i;
            }
        }
    }

    return index;
}

void SSTF(int requests[], int n, int head) {
    bool visited[n];
    for (int i = 0; i < n; i++) visited[i] = false;

    int totalSeek = 0;

    printf("\nSSTF Order:\n");

    for (int i = 0; i < n; i++) {
        int idx = findClosest(requests, visited, n, head);
        visited[idx] = true;
        totalSeek += absDiff(head, requests[idx]);
        head = requests[idx];
        printf("%d ", head);
    }

    printf("\nTotal Head Movement in SSTF: %d\n", totalSeek);
}

int main() {
    int n, head;
    printf("Enter number of requests: ");
    scanf("%d", &n);

    int requests[n];
    printf("Enter request queue: ");
    for (int i = 0; i < n; i++)
        scanf("%d", &requests[i]);

    printf("Enter initial head position: ");
    scanf("%d", &head);

    SSTF(requests, n, head);
    return 0;
}
