#include <stdio.h>
#include <stdlib.h>

void sort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++)
        for (int j = 0; j < n - i - 1; j++)
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
}

void SCAN(int requests[], int n, int head, int disk_size, char direction) {
    int totalSeek = 0;
    int index = 0;
    int order[n + 1];  // +1 in case we hit 0 or disk_size - 1
    int visited[n + 1];
    int i;

    sort(requests, n);

    for (i = 0; i < n; i++) {
        if (requests[i] >= head) {
            index = i;
            break;
        }
    }

    int count = 0;

    printf("\nSCAN Order:\n");

    if (direction == 'R') {
        // Move right (towards higher track numbers)
        for (i = index; i < n; i++) {
            printf("%d ", requests[i]);
            totalSeek += abs(head - requests[i]);
            head = requests[i];
        }

        // Move to the end
        if (head != disk_size - 1) {
            totalSeek += abs((disk_size - 1) - head);
            head = disk_size - 1;
            printf("%d ", head);  // optionally include this
        }

        // Then reverse and go left
        for (i = index - 1; i >= 0; i--) {
            printf("%d ", requests[i]);
            totalSeek += abs(head - requests[i]);
            head = requests[i];
        }

    } else {
        // Move left (towards 0)
        for (i = index - 1; i >= 0; i--) {
            printf("%d ", requests[i]);
            totalSeek += abs(head - requests[i]);
            head = requests[i];
        }

        // Move to the beginning
        if (head != 0) {
            totalSeek += head;
            head = 0;
            printf("%d ", head);  // optionally include this
        }

        // Then reverse and go right
        for (i = index; i < n; i++) {
            printf("%d ", requests[i]);
            totalSeek += abs(head - requests[i]);
            head = requests[i];
        }
    }

    printf("\nTotal Head Movement in SCAN: %d\n", totalSeek);
}

int main() {
    int n, head, disk_size;
    char direction;
    printf("Enter number of requests: ");
    scanf("%d", &n);

    int requests[n];
    printf("Enter request queue: ");
    for (int i = 0; i < n; i++)
        scanf("%d", &requests[i]);

    printf("Enter initial head position: ");
    scanf("%d", &head);

    printf("Enter total disk size (e.g., 200): ");
    scanf("%d", &disk_size);

    printf("Enter direction (L for left, R for right): ");
    scanf(" %c", &direction);  // Note the space before %c

    SCAN(requests, n, head, disk_size, direction);
    return 0;
}
