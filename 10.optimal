#include <stdio.h>

#define MAX_FRAMES 10
#define MAX_PAGES 100

int predict(int pages[], int frames[], int total_pages, int current_index, int total_frames) {
    int res = -1, farthest = current_index;
    for (int i = 0; i < total_frames; i++) {
        int j;
        for (j = current_index; j < total_pages; j++) {
            if (frames[i] == pages[j]) {
                if (j > farthest) {
                    farthest = j;
                    res = i;
                }
                break;
            }
        }
        if (j == total_pages) // This page is never used again
            return i;
    }
    return (res == -1) ? 0 : res;
}

int main() {
    int frames, pages, page[MAX_PAGES], frame[MAX_FRAMES];
    int page_faults = 0, page_hits = 0;
    int flag1, flag2;

    printf("Enter number of frames: ");
    scanf("%d", &frames);

    printf("Enter number of pages: ");
    scanf("%d", &pages);

    printf("Enter reference string (page numbers):\n");
    for (int i = 0; i < pages; ++i)
        scanf("%d", &page[i]);

    for (int i = 0; i < frames; ++i)
        frame[i] = -1;

    printf("\n| Reference |");
    for (int i = 0; i < frames; i++) printf(" Frame %d |", i + 1);
    printf(" Page Faults | Page Hits |");

    printf("\n|-----------|");
    for (int i = 0; i < frames; i++) printf("---------|");
    printf("-------------|-----------|");

    for (int i = 0; i < pages; ++i) {
        flag1 = flag2 = 0;

        for (int j = 0; j < frames; ++j) {
            if (frame[j] == page[i]) {
                page_hits++;
                flag1 = flag2 = 1;
                break;
            }
        }

        if (!flag1) {
            for (int j = 0; j < frames; ++j) {
                if (frame[j] == -1) {
                    frame[j] = page[i];
                    page_faults++;
                    flag2 = 1;
                    break;
                }
            }
        }

        if (!flag2) {
            int pos = predict(page, frame, pages, i + 1, frames);
            frame[pos] = page[i];
            page_faults++;
        }

        printf("\n| %9d |", page[i]);
        for (int j = 0; j < frames; ++j)
            printf(" %7d |", (frame[j] == -1) ? -1 : frame[j]);
        printf(" %11d | %9d |", page_faults, page_hits);
    }

    float fault_ratio = (float)page_faults / pages;
    float hit_ratio = (float)page_hits / pages;

    printf("\n\nTotal Page Faults: %d", page_faults);
    printf("\nTotal Page Hits  : %d", page_hits);
    printf("\nPage Fault Ratio : %.2f", fault_ratio);
    printf("\nPage Hit Ratio   : %.2f\n", hit_ratio);

    return 0;
}
